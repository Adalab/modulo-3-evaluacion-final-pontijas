{"version":3,"sources":["images/logo.png","components/FilterName.js","components/FilterStatus.js","components/Filters.js","components/Character.js","components/CharacterList.js","components/CharacterDetail.js","services/getDataFromApi.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","FilterName","props","className","type","placeholder","onChange","ev","preventDefault","handleFilter","value","target","key","FilterStatus","id","name","Filters","Character","to","character","src","image","alt","title","species","CharacterList","charactersInfo","characters","map","CharacterDetail","origin","status","episodes","getDataFromApi","fetch","then","response","json","data","console","log","results","location","episode","length","App","useState","setCharacters","nameFilter","setNameFilter","statusFilter","setStatusFilter","useEffect","filteredCharacters","filter","toUpperCase","includes","logo","path","render","matchId","match","params","matchCharacter","find","parseInt","undefined","href","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fd36fe11.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.75509f2e.png\";","import React from 'react';\r\nimport '../stylesheets/FilterName.scss';\r\n\r\nconst FilterName = (props) => {\r\n  const handleChange = (ev) => {\r\n    ev.preventDefault();\r\n    props.handleFilter({\r\n      value: ev.target.value,\r\n      key: 'name',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form className=\"filter__container\">\r\n      <label className=\"filter__label\">Filter by name</label>\r\n      <input type=\"text\" className=\"filter__input\" placeholder=\"Character name\" onChange={handleChange}></input>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default FilterName;\r\n","import React from 'react';\r\nimport '../stylesheets/FilterStatus.scss';\r\n\r\nconst FilterStatus = (props) => {\r\n  const handleChange = (ev) => {\r\n    props.handleFilter({\r\n      value: ev.target.value,\r\n      key: 'status',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form className=\"filter__container\">\r\n      <label className=\"filter__label\">Filter by status</label>\r\n      <select id=\"status\" name=\"status\" onChange={handleChange} className=\"filter__input-select\">\r\n        <option value=\"all\" className=\"filter__option\">\r\n          All\r\n        </option>\r\n        <option value=\"Dead\" className=\"filter__option\">\r\n          Dead\r\n        </option>\r\n        <option value=\"Alive\" className=\"filter__option\">\r\n          Alive\r\n        </option>\r\n      </select>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default FilterStatus;\r\n","import React from 'react';\r\nimport FilterName from './FilterName';\r\nimport FilterStatus from './FilterStatus';\r\nimport '../stylesheets/Filters.scss';\r\n\r\nconst Filters = (props) => {\r\n  return (\r\n    <section className=\"filters__container\">\r\n      <FilterName handleFilter={props.handleFilter} />\r\n      <FilterStatus handleFilter={props.handleFilter} />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../stylesheets/Character.scss';\n\nconst Character = (props) => {\n  return (\n    <Link to={`/character/${props.character.id}`} className=\"card__link\">\n      <section className=\"card__container\">\n        <img src={props.character.image} alt={`Imagen de ${props.character.name}`} title={`Imagen de ${props.character.name}`} className=\"card__img\"></img>\n        <section className=\"card__info\">\n          <h4>{props.character.name}</h4>\n          <p>{props.character.species}</p>\n        </section>\n      </section>\n    </Link>\n  );\n};\n\nexport default Character;\n","import React from 'react';\nimport Character from './Character';\nimport '../stylesheets/CharacterList.scss';\n\nconst CharacterList = (props) => {\n  const charactersInfo = props.characters.map((character) => {\n    return (\n      <li key={character.id} className=\"list__item\">\n        <Character character={character} />\n      </li>\n    );\n  });\n\n  return (\n    <div>\n      <ul className=\"list__container\">{charactersInfo}</ul>\n    </div>\n  );\n};\n\nexport default CharacterList;\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../stylesheets/CharacterDetail.scss';\r\n\r\nconst CharacterDetail = (props) => {\r\n  return (\r\n    <div className=\"modal__background\">\r\n      <div className=\"modal__dialog\">\r\n        <section className=\"modal__container\">\r\n          <div className=\"modal__header\">\r\n            <Link to=\"/\" className=\"modal__link\">\r\n              Go Back\r\n            </Link>\r\n          </div>\r\n          <section className=\"modal__info\">\r\n            <img src={props.character.image} alt={`Imagen de ${props.character.name}`} title={`Imagen de ${props.character.name}`} className=\"modal__img\" />\r\n            <ul className=\"modal__list\">\r\n              <h2 className=\"modal__title\">{props.character.name}</h2>\r\n              <li className=\"modal__list-item\">specie: {props.character.species}</li>\r\n              <li className=\"modal__list-item\">origin: {props.character.origin}</li>\r\n              <li className=\"modal__list-item\">status: {props.character.status}</li>\r\n              <li className=\"modal__list-item\">episodes: {props.character.episodes}</li>\r\n            </ul>\r\n          </section>\r\n        </section>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterDetail;\r\n","const getDataFromApi = () => {\r\n  return fetch('https://rickandmortyapi.com/api/character')\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      console.log('data', data);\r\n\r\n      return data.results.map((character) => {\r\n        return {\r\n          id: character.id,\r\n          name: character.name,\r\n          image: character.image,\r\n          species: character.species,\r\n          origin: character.origin.name,\r\n          status: character.status,\r\n          location: character.location.name,\r\n          episodes: character.episode.length,\r\n        };\r\n      });\r\n    });\r\n};\r\n\r\nexport default getDataFromApi;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Filters from './Filters';\r\nimport CharacterList from './CharacterList';\r\nimport CharacterDetail from './CharacterDetail';\r\nimport getDataFromApi from '../services/getDataFromApi';\r\nimport logo from '../images/logo.png';\r\nimport '../stylesheets/App.scss';\r\n\r\nconst App = () => {\r\n  const [characters, setCharacters] = useState([]);\r\n  const [nameFilter, setNameFilter] = useState('');\r\n  const [statusFilter, setStatusFilter] = useState('all');\r\n\r\n  useEffect(() => {\r\n    getDataFromApi().then((data) => setCharacters(data));\r\n  }, []);\r\n\r\n  const handleFilter = (data) => {\r\n    if (data.key === 'name') {\r\n      setNameFilter(data.value);\r\n    } else if (data.key === 'status') {\r\n      setStatusFilter(data.value);\r\n    }\r\n  };\r\n\r\n  const filteredCharacters = characters\r\n    .filter((character) => {\r\n      return character.name.toUpperCase().includes(nameFilter.toUpperCase());\r\n    })\r\n    .filter((character) => {\r\n      console.log(character.status, statusFilter);\r\n      if (statusFilter === 'all') {\r\n        return true;\r\n      } else {\r\n        return character.status === statusFilter;\r\n      }\r\n    });\r\n\r\n  const renderModal = (props) => {\r\n    const matchId = props.match.params.id;\r\n    const matchCharacter = characters.find((character) => {\r\n      return character.id === parseInt(matchId);\r\n    });\r\n    if (matchCharacter !== undefined) {\r\n      return <CharacterDetail character={matchCharacter} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"App__container\">\r\n        <header className=\"header__container\" id=\"header\">\r\n          <img src={logo} title=\"Rick y Morty\" alt=\"Rick y Morty\" className=\"header__logo\"></img>\r\n        </header>\r\n        <main className=\"main__container\">\r\n          <Filters handleFilter={handleFilter} />\r\n          <CharacterList characters={filteredCharacters} />\r\n          <Switch>\r\n            <Route path=\"/character/:id\" render={renderModal} />\r\n          </Switch>\r\n        </main>\r\n        <footer className=\"footer__container\">\r\n          <a className=\"footer__btn\" href=\"#header\">\r\n            go to top\r\n          </a>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.css';\nimport App from './components/App';\nimport { HashRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}